### 0.4.4 ###

- Added new options to trimfastq supporting the output of FASTA format files and 
adding more flexibility to the --mates_file output functionality. Also optimized
the case where -p = 0.0, to enable very efficient file format conversion using
--fasta and --mate_file when no additional trimming is desired.

- Fixed bug in fastq_nodup which led to corruption of the read headers in .single
output files for colorspace reads. 

- All *.awk scripts in the /bin directory now have correct shebang lines, so they
may be located and run through the PATH. 

- Added new script fastq_merge_csfasta.awk to pull modified csfasta read data back
into the originating fastq file. This is useful when using the SAET read error 
correction tool, which only supports csfasta format files.  

- Documentation fixes and updates reflecting the above changes.

### 0.4.3 ###
- General documentation improvements and fixed typos and formatting problems.

- Fixed a status printing bug in trimfastq

- Fixed bug in trimfastq Velvet paired interleaved output where wrong mate was reversed.

### 0.4.2 ###
- Documentation improvements; fixed typos and formatting problems when read on Github.

- Added the new "free" parameter to the graph_ops UNSTASH command.

- Fixed a segfault in ref_select when input SAM files contain no aligned reads.

- Fixed build problems in XCode projects.

- solid2fastq automatically checks for barcode strings of "default" or "Default".

### 0.4.1 ###
- Fixed typos and broken links in the documentation.

- Added this change log.

### 0.4.0 ###
- solid2fastq: Reversed the meaning of "read1" and "read2" file names for 
mate-pairs.  "read1" is the first read in a pair and "read2" is the second 
read, 5' to 3'.

- solid2fastq: Added support for new native SOLiD file read type "F5-RNA" and 
variations on "QV" placement in quality files.

- solid2fastq: Added -x parameter to turn of read ID suffix of "/1" and "/2".

- trimfastq:  Removed -c parameter.  This parameter toggled dinucleotide error 
probability calculation.  Now trimfastq automatically detects if a read set is 
colorspace or nucleotide and chooses the appropriate error probability 
calculation method.

- fastq_nodup: Fixed bug where index lengths of 32 would cause a segfault.

- fastq_nodup: Fixed bug where too many singlets were removed.

- Added new programs ref_select, tetracalc, graph_ops, and many other utility
scripts.  
